{"version":3,"file":"useAddress.js","sourceRoot":"","sources":["../../src/hooks/useAddress.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,EAAE;IAC1C,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,EAAU,CAAC;IACjD,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,GACxB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,EAAE;YACtB,uBAAuB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;gBAC5D,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE;oBACxB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,CAAC;IAErC,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { WalletContext } from '@mesh/contexts';\n\nexport const useAddress = (accountId = 0) => {\n  const [address, setAddress] = useState<string>();\n  const {\n    hasConnectedWallet,\n    connectedWalletName,\n    connectedWalletInstance,\n  } = useContext(WalletContext);\n\n  useEffect(() => {\n    if (hasConnectedWallet) {\n      connectedWalletInstance.getUsedAddresses().then((addresses) => {\n        if (addresses[accountId]) {\n          setAddress(addresses[accountId]);\n        }\n      });\n    }\n  }, [accountId, connectedWalletName]);\n\n  return address;\n};\n"]}