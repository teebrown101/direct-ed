{"version":3,"file":"useWalletTx.js","sourceRoot":"","sources":["../../src/hooks/useWalletTx.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAG/C,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,OAE3B,EAAE,EAAE;IACH,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;IAEpC,MAAM,EACJ,kBAAkB,EAClB,uBAAuB,GACxB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,MAAM,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAc,GAAG,EAAE;QACtC,IAAI,kBAAkB,EAAE;YACtB,OAAO,IAAI,WAAW,CAAC;gBACrB,SAAS,EAAE,uBAAuB;gBAClC,UAAU;gBACV,GAAG;aACJ,CAAC,CAAC;SACJ;QAED,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","sourcesContent":["import { useContext, useState } from 'react';\nimport { Transaction } from '@martifylabs/mesh';\nimport { WalletContext } from '@mesh/contexts';\nimport type { Era, Protocol } from '@martifylabs/mesh';\n\nexport const useWalletTx = (options: {\n  era?: Era, parameters?: Protocol,\n}) => {\n  const { era, parameters } = options;\n\n  const {\n    hasConnectedWallet,\n    connectedWalletInstance,\n  } = useContext(WalletContext);\n\n  const [tx] = useState<Transaction>(() => {\n    if (hasConnectedWallet) {\n      return new Transaction({\n        initiator: connectedWalletInstance,\n        parameters,\n        era,\n      });\n    }\n\n    throw new Error('Please make sure to connect a wallet before calling useWalletTx');\n  });\n\n  return tx;\n};\n"]}