{"version":3,"file":"useNetwork.js","sourceRoot":"","sources":["../../src/hooks/useNetwork.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE;IAC7B,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,EAAU,CAAC;IACrD,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,GACxB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,EAAE;YACtB,uBAAuB,CAAC,YAAY,EAAE;iBACnC,IAAI,CAAC,YAAY,CAAC,CAAC;SACvB;IACH,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { WalletContext } from '@mesh/contexts';\n\nexport const useNetwork = () => {\n  const [networkId, setNetworkId] = useState<number>();\n  const {\n    hasConnectedWallet,\n    connectedWalletName,\n    connectedWalletInstance,\n  } = useContext(WalletContext);\n\n  useEffect(() => {\n    if (hasConnectedWallet) {\n      connectedWalletInstance.getNetworkId()\n        .then(setNetworkId);\n    }\n  }, [connectedWalletName]);\n\n  return networkId;\n};\n"]}