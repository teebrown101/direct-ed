{"version":3,"file":"useWallet.js","sourceRoot":"","sources":["../../src/hooks/useWallet.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,EACvB,gBAAgB,EAChB,aAAa,EACb,UAAU,EACV,KAAK,GACN,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,IAAI,aAAa,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS,EAAE;QAC3D,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;KACH;IAED,OAAO;QACL,IAAI,EAAE,mBAAmB;QACzB,UAAU,EAAE,gBAAgB;QAC5B,SAAS,EAAE,kBAAkB;QAC7B,MAAM,EAAE,uBAAuB;QAC/B,OAAO,EAAE,aAAa;QACtB,UAAU;QACV,KAAK;KACN,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useContext } from 'react';\nimport { WalletContext } from '@mesh/contexts';\n\nexport const useWallet = () => {\n  const {\n    hasConnectedWallet,\n    connectedWalletName,\n    connectedWalletInstance,\n    connectingWallet,\n    connectWallet,\n    disconnect,\n    error,\n  } = useContext(WalletContext);\n\n  if (connectWallet === undefined || disconnect === undefined) {\n    throw new Error(\n      'Can\\'t call useWallet outside of the WalletProvider context',\n    );\n  }\n\n  return {\n    name: connectedWalletName,\n    connecting: connectingWallet,\n    connected: hasConnectedWallet,\n    wallet: connectedWalletInstance,\n    connect: connectWallet,\n    disconnect,\n    error,\n  };\n};\n"]}