{"version":3,"file":"useAssets.js","sourceRoot":"","sources":["../../src/hooks/useAssets.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAG/C,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,EAAW,CAAC;IAChD,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,GACxB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,EAAE;YACtB,uBAAuB,CAAC,SAAS,EAAE;iBAChC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpB;IACH,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { WalletContext } from '@mesh/contexts';\nimport type { Asset } from '@martifylabs/mesh';\n\nexport const useAssets = () => {\n  const [asstes, setAsstes] = useState<Asset[]>();\n  const {\n    hasConnectedWallet,\n    connectedWalletName,\n    connectedWalletInstance,\n  } = useContext(WalletContext);\n\n  useEffect(() => {\n    if (hasConnectedWallet) {\n      connectedWalletInstance.getAssets()\n        .then(setAsstes);\n    }\n  }, [connectedWalletName]);\n\n  return asstes;\n};\n"]}