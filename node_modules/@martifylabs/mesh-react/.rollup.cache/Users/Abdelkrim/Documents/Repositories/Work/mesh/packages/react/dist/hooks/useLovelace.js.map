{"version":3,"file":"useLovelace.js","sourceRoot":"","sources":["../../src/hooks/useLovelace.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,MAAM,CAAC,MAAM,WAAW,GAAG,GAAG,EAAE;IAC9B,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,EAAU,CAAC;IACnD,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,GACxB,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAE9B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,EAAE;YACtB,uBAAuB,CAAC,WAAW,EAAE;iBAClC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtB;IACH,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { WalletContext } from '@mesh/contexts';\n\nexport const useLovelace = () => {\n  const [lovelace, setLovelace] = useState<string>();\n  const {\n    hasConnectedWallet,\n    connectedWalletName,\n    connectedWalletInstance,\n  } = useContext(WalletContext);\n\n  useEffect(() => {\n    if (hasConnectedWallet) {\n      connectedWalletInstance.getLovelace()\n        .then(setLovelace);\n    }\n  }, [connectedWalletName]);\n\n  return lovelace;\n};\n"]}